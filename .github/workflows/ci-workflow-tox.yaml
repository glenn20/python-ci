name: CI Workflow

#   A reusable github workflow to run python CI workflows, including static code
#   checks, automated testing (using pytest and tox), package building, and
#   creating a GitHub release. Publishing python packages is not currently
#   possible from a reusable workflow, so the publish workflows must be run from
#   the main workflow file.
#
#   The workflow elements selected are specified in the `jobs` input. The
#   default is to run the `test` and `build` jobs. The CI workflow should be
#   configured in the `tox-gh` config (eg. in pyproject.toml). See
#   https://github.com/tox-dev/tox-gh.
#
#   Accepts the following inputs as json strings:
#   - `jobs`: the list of jobs to run,
#   - `os`: the list of operating systems on which to run tests, and
#   - `python-version`: the list of python versions on which to run tests.
#
#   Assumes the configurations for all tools (`mypy`, `uv`, `ruff`, `pytest`,
#   ...) are fully specified in config files (eg `pyproject.toml`).
#
#   These workflows use `tox`, as it can be more easily customised in your
#   pyproject.toml so that the same CI process runs on your local computer and
#   on github.
#
#   All workflows use astral `uv` to execute actions wherever possible.

on:
  workflow_call:
    inputs:
      jobs:
        description: >-
          A json string containing the list of jobs to run. Available jobs are:
          - `check`: Run static code checks (using `mypy`, `ruff`, etc.).
          - `test`: Run tests and code checks using `tox`.
          - `build`: Build the python package.
          - `publish-test`: Publish the package to test.pypi.org.
          - `publish`: Publish the package to pypi.org (runs `publish-test`).
          - `release`: Create a GitHub release.
          The default is `["test", "build"]`.
        default: '["test", "build"]'
        type: string
        required: false
      os:
        description: >-
          A json string containing the list of operating systems on which to
          run the test matrix.
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'
        type: string
        required: false
      python-version:
        description: >-
          A json string containing the list of python versions on
          which to run the test matrix.
        default: '["3.9", "3.10", "3.11", "3.12", "3.13"]'
        type: string
        required: false

jobs:
  build:  # Always build the package in this workflow
    name: Build python package
    uses: glenn20/python-ci/.github/workflows/build.yaml@v2

  test:
    name: Tests
    if: ${{ contains(fromJson(inputs.jobs), 'test') }}
    uses: glenn20/python-ci/.github/workflows/test-tox.yaml@v2
    with:
      os: ${{ inputs.os }}
      python-version: ${{ inputs.python-version }}
